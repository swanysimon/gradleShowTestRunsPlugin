/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.github.showTestRuns

import static com.github.showTestRuns.ShowTestRunsPlugin.PLUGIN_NAME
import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.logging.LogLevel
import org.gradle.api.logging.Logger
import org.gradle.api.tasks.TaskContainer
import org.gradle.api.tasks.testing.Test
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

class ShowTestRunsPlugin implements Plugin<Project> {

    static final String EXTENSION_NAME = "showTestRuns"
    static final String PLUGIN_NAME = this.getClass().getSimpleName()

    void apply(Project project) {
        def config = project.extensions.create(EXTENSION_NAME, ShowTestRunsExtension)
        project.logger.trace("{} configuration for project: {}", PLUGIN_NAME, project.name, config)
        new PluginApplier(project, config).run()
    }
}

class PluginApplier implements Runnable {

    private final TaskContainer tasks
    private final Logger logger
    private final ShowTestRunsExtension config

    PluginApplier(Project project, ShowTestRunsExtension config) {
        this.tasks = project.tasks
        this.logger = project.logger
        this.config = config
    }

    @Override
    void run() {
        tasks.withType(Test).configureEach { Test testTask ->
            if (config.ignore.any { ignored -> testTask.name =~ ignored }) {
                logger.debug("Task {} found in {} ignore list. Skipping task", testTask.name, PLUGIN_NAME)
                return
            }

            LogLevel.values().each { level ->
                def testLogging = testTask.testLogging.get(level)
                testLogging.exceptionFormat = TestExceptionFormat.FULL
                testLogging.events += TestLogEvent.FAILED
            }
        }
    }
}
